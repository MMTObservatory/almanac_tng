[metadata]
name = mmt_almanac
provides = mmt_almanac
author = T. E. Pickering
author_email = tim@mmto.org
license = BSD 3-Clause License
license_file = LICENSE.rst
url = https://github.com/MMTObservatory/almanac_tng
github_project = MMTObservatory/almanac_tng
edit_on_github = True
description = MMTO Almanac and almanac utilities
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Astronomy

[options]
python_requires = >=3.8
packages = find:
setup_requires =
    setuptools_scm
    numpy
install_requires =
    numpy
    astropy
tests_require =
    pytest
    coverage
zip_safe = False

[options.extras_require]
all =
    astroplan
    skyfield
    pandas
    matplotlib
docs =
    sphinx
    sphinx-astropy
test =
    tox
    pytest
    pytest-cov
    pytest-astropy
    coverage
    codecov
extra =
    jupyter

[options.entry_points]
console_scripts =
    update_iers_a = mmt_almanac.update_iers_a:main

[build_sphinx]
source-dir = docs
build-dir = docs/_build
all_files = 1

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[upload_docs]
upload-dir = docs/_build/html
show-response = 1

[tool:pytest]
testpaths = "mmt_almanac" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
parallel = True
branch = True
omit =
    mmt_almanac/_astropy_init*
    mmt_almanac/conftest.py
    mmt_almanac/*setup_package*
    mmt_almanac/tests/*
    mmt_almanac/*/tests/*
    mmt_almanac/extern/*
    mmt_almanac/version*
    */mmt_almanac/_astropy_init*
    */mmt_almanac/conftest.py
    */mmt_almanac/*setup_package*
    */mmt_almanac/tests/*
    */mmt_almanac/*/tests/*
    */mmt_almanac/extern/*
    */mmt_almanac/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
